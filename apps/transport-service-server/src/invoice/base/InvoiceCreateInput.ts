/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsNumber,
  Min,
  Max,
  IsOptional,
  ValidateNested,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";

import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { Type } from "class-transformer";
import { PaymentCreateNestedManyWithoutInvoicesInput } from "./PaymentCreateNestedManyWithoutInvoicesInput";
import { TransportDetailCreateNestedManyWithoutInvoicesInput } from "./TransportDetailCreateNestedManyWithoutInvoicesInput";

@InputType()
class InvoiceCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  amount?: number | null;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  date?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  invoiceNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => PaymentCreateNestedManyWithoutInvoicesInput,
  })
  @ValidateNested()
  @Type(() => PaymentCreateNestedManyWithoutInvoicesInput)
  @IsOptional()
  @Field(() => PaymentCreateNestedManyWithoutInvoicesInput, {
    nullable: true,
  })
  payments?: PaymentCreateNestedManyWithoutInvoicesInput;

  @ApiProperty({
    required: false,
    type: () => TransportDetailCreateNestedManyWithoutInvoicesInput,
  })
  @ValidateNested()
  @Type(() => TransportDetailCreateNestedManyWithoutInvoicesInput)
  @IsOptional()
  @Field(() => TransportDetailCreateNestedManyWithoutInvoicesInput, {
    nullable: true,
  })
  transportDetails?: TransportDetailCreateNestedManyWithoutInvoicesInput;
}

export { InvoiceCreateInput as InvoiceCreateInput };
